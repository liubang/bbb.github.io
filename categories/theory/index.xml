<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>theory on liubang's blog</title><link>https://iliubang.cn/categories/theory/</link><description>Recent content in theory on liubang's blog</description><generator>Hugo -- gohugo.io</generator><copyright>Copyright © 2016-2023 LiuBang. All Rights Reserved.</copyright><lastBuildDate>Mon, 25 May 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://iliubang.cn/categories/theory/index.xml" rel="self" type="application/rss+xml"/><item><title>分布式协议</title><link>https://iliubang.cn/posts/inf/2020-05-25-%E5%88%86%E5%B8%83%E5%BC%8F%E5%8D%8F%E8%AE%AE/</link><pubDate>Mon, 25 May 2020 00:00:00 +0000</pubDate><guid>https://iliubang.cn/posts/inf/2020-05-25-%E5%88%86%E5%B8%83%E5%BC%8F%E5%8D%8F%E8%AE%AE/</guid><description>拜占庭将军问题 简介 在可能存在叛军的情况下，采用合适的通讯协议，让多个将军达成共识，执行统一的作战计划 二忠一叛难题 它是分布式领域最复杂的容错模</description></item></channel></rss>